# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Build
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH=$(pwd)/depot_tools:$PATH
          gclient
          
          mkdir ~/v8
          cd ~/v8
          fetch v8
          cd v8
          
          gclient sync
          
          ./build/install-build-deps.sh
          
          tools/dev/gm.py x64.release.check
          
          tree out/x64.release
          
          mkdir -p ~/v8_result/lib
          cp out/x64.release/obj/libwee8.a ~/v8_result/lib
          cp include/ ~/v8_result -r
          
      - uses: actions/upload-artifact@v2
        with:
          name: v8_result
          path: ~/v8_result
          
  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: v8_result
          path: v8_result/

      - name: Create Release Asset
        run: |
          set -x
          VER=`curl https://v8.dev/blog/tags/release | grep -Eo "V8 release v[0-9.]*"  | sort -rn | head -n 1 | sed 's/V8 release v//g'`
          echo $VER
          export VER=$VER
          cd ~
          tar cvfz v8_result_$VER.tgz v8_result
          cd -

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: V8_$VER_${{ github.event.inputs.tag_date }}
          release_name: V8_$VER_${{ github.event.inputs.tag_date }}
          draft: false
          prerelease: false

      - name: Upload V8
        #id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./v8_result_$VER.tgz
          asset_name: v8_result_$VER.tgz
          asset_content_type: application/tgz
          
